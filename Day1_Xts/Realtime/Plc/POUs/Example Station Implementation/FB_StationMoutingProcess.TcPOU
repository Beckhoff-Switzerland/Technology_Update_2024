<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_StationMoutingProcess" Id="{2ea4eb55-766a-49d0-bfe3-0597f9e39c1a}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_StationMoutingProcess EXTENDS FB_StationBase
VAR
	bInitDone : BOOL;
	fbSimAxis : CHALET_Nc.FB_NcAxis;
	iTempAxis : I_NcAxis_PLC;
	nAxisId : UDINT;

	iFeedback : I_CH_Feedback;
	hr : HRESULT;
	
	fbTonP1 : TON;
	fbTonP2 : TON;
	fbTonP3 : TON;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Update" Id="{a67f343b-33d9-43a4-bce6-49bd0c18e0c6}">
      <Declaration><![CDATA[METHOD Update
VAR_INPUT
	iStation : I_XTS_Station_PLC;
END_VAR
VAR
	iTempMover : I_XTS_Mover;
END_VAR
VAR_INST
	fbTriggerMoverInPlace : R_TRIG; 
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[//This is executed once when the mover arrives at the station
fbTriggerMoverInPlace(CLK:= iStation.AreMoversInPlace);
IF fbTriggerMoverInPlace.Q THEN
	State := E_StationProcessState.ProcessStart;
END_IF

IF bInitDone = FALSE THEN
	fbSimAxis.Initialize();
	bInitDone := 	fbSimAxis.Initialized;					
	RETURN;
END_IF

IF fbSimAxis.MotionState = MC_AxisStates.MC_AXISSTATE_DISABLED THEN
	fbSimAxis.PowerOn();
END_IF

fbSimAxis.Update();


CASE nState OF
	E_StationProcessState.Idle:
		;
		
	E_StationProcessState.ProcessStart:
		fbSimAxis.SetActPosition(0);
		nAxisId := MAIN.iXtsSystem.Station('Mounting').MoversInQueue[0].FullAccess.getAxisRef.NcToPlc.AxisId;
		nState := E_StationProcessState.ProcessBusy;
		
	E_StationProcessState.ProcessBusy:
		CASE nStep OF 
			
			0: // gearIn
				iFeedback := Main.aMovers[nAxisId].Axis.GearIn(
					ipMasterAxisAdapter := fbSimAxis, 
					fRatioNumerator := 1, 
					nRatioDenominator := 1, 
					fAcceleration := MC_DEFAULT, 
					fDeceleration := MC_DEFAULT, 
					fJerk := MC_DEFAULT);
				
					IF iFeedback.Done OR iFeedback.Busy THEN
						nStep:= nStep + 1;					
					END_IF
				
			1: // wait for done
				IF iFeedback.Done THEN
					nStep:= nStep + 1;										
				END_IF
			
			2 : // wait for P1
				fbTonP1.IN := TRUE;
				IF fbTonP1.Q THEN
					fbTonP1.IN := FALSE;
					nStep:= nStep + 1;
				END_IF
				
			3 : // move forward to P2
				iFeedback := fbSimAxis.MoveAbsolute(
					fPosition := 50, 
					fVelocity := 500, 
					fAcceleration := 2000, 
					fDeceleration := 2000, 
					fJerk := 5000, 
					eBufferMode := MC_Aborting);
					
				IF iFeedback.Busy OR iFeedback.Done THEN
					nStep:= nStep + 1;					
				END_IF
				
			4: // wait for done
				IF iFeedback.Done THEN
					nStep:= nStep + 1;										
				END_IF
				
			5: // wait for P2
				fbTonP2.IN := TRUE;
				IF fbTonP2.Q THEN
					fbTonP2.IN := FALSE;
					nStep:= nStep + 1;
				END_IF
				
			6 : // move backward to P3
				iFeedback := fbSimAxis.MoveAbsolute(
					fPosition := -50, 
					fVelocity := 500, 
					fAcceleration := 2000, 
					fDeceleration := 2000, 
					fJerk := 5000, 
					eBufferMode := MC_Aborting);
					
				IF iFeedback.Busy OR iFeedback.Done THEN
					nStep:= nStep + 1;					
				END_IF
				
			7: // wait for done
				IF iFeedback.Done THEN
					nStep:= nStep + 1;										
				END_IF
				
			8: // wait for P3
				fbTonP3.IN := TRUE;
				IF fbTonP3.Q THEN
					fbTonP3.IN := FALSE;
					nStep:= nStep + 1;
				END_IF
				
			9: // gearOut
				iFeedback := Main.aMovers[nAxisId].Axis.GearOut();
					
				IF iFeedback.Busy OR iFeedback.Done THEN
					nStep:= nStep + 1;
				END_IF
			
			10: // wait for done
				hr := Main.aMovers[nAxisId].Axis.Feedback.HR;
				IF checkOK(hr) THEN
					nStep:= nStep + 1;										
				END_IF
				
			11: // done
				nStep:= 0;
				nState := E_StationProcessState.ProcessDone;
				
		END_CASE
				
	E_StationProcessState.ProcessDone:
		IF __QUERYINTERFACE(MAIN.aMovers[nAxisId], iTempMover) THEN
			iTempMover.TargedStation := 'Unloading';
		END_IF
		nState := E_StationProcessState.Idle;
END_CASE

fbTonP1(PT:= T#100MS);
fbTonP2(PT:= T#250MS);
fbTonP3(PT:= T#300MS);
]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_StationMoutingProcess">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_StationMoutingProcess.Update">
      <LineId Id="306" Count="134" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>