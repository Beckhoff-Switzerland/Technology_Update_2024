<project xmlns="http://www.plcopen.org/xml/tc6_0200" xmlns:html="http://www.w3.org/1999/xhtml">
  <fileHeader companyName="Beckhoff Automation GmbH" productName="TwinCAT PLC Control" productVersion="3.5.13.21" creationDateTime="2024-04-22T16:02:21.5154165" />
  <contentHeader name="PLC_NeuralNetwork" modificationDateTime="2024-04-22T16:02:21.5174167">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous>
      <pou name="MAIN" pouType="program">
        <interface>
          <localVars constant="true">
            <variable name="cModelInputChannels">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="3" />
              </initialValue>
            </variable>
            <variable name="cModelInputWidth">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="224" />
              </initialValue>
            </variable>
            <variable name="cModelInputHeight">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="224" />
              </initialValue>
            </variable>
            <variable name="cMaxPixelValue">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="255" />
              </initialValue>
            </variable>
            <variable name="cNumberOfClasses">
              <type>
                <UDINT />
              </type>
              <initialValue>
                <simpleValue value="21" />
              </initialValue>
            </variable>
          </localVars>
          <localVars>
            <variable name="hr">
              <type>
                <derived name="HRESULT" />
              </type>
            </variable>
            <variable name="fbCameraControl">
              <type>
                <derived name="FB_VN_SimpleCameraControl" />
              </type>
            </variable>
            <variable name="eCameraState">
              <type>
                <derived name="ETcVnCameraState" />
              </type>
            </variable>
            <variable name="sFolderPath">
              <type>
                <string length="255" />
              </type>
              <initialValue>
                <simpleValue value="'C:\cnnModels\'" />
              </initialValue>
              <documentation>
                <html:xhtml> Load Model</html:xhtml>
              </documentation>
            </variable>
            <variable name="sFilePath">
              <type>
                <string length="255" />
              </type>
            </variable>
            <variable name="fbReadDnn">
              <type>
                <derived name="FB_VN_ReadNeuralNetwork" />
              </type>
            </variable>
            <variable name="ipDnnModel">
              <type>
                <derived name="ITcVnNeuralNetwork" />
              </type>
            </variable>
            <variable name="bDnnModelInitialized">
              <type>
                <BOOL />
              </type>
              <initialValue>
                <simpleValue value="FALSE" />
              </initialValue>
            </variable>
            <variable name="nReturnCode">
              <type>
                <UDINT />
              </type>
            </variable>
            <variable name="sFileName">
              <type>
                <string length="255" />
              </type>
              <documentation>
                <html:xhtml> Model information</html:xhtml>
              </documentation>
            </variable>
            <variable name="sClassLabels">
              <type>
                <array>
                  <dimension lower="0" upper="cNumberOfClasses" />
                  <baseType>
                    <string />
                  </baseType>
                </array>
              </type>
              <initialValue>
                <arrayValue>
                  <value><simpleValue value="'nok_kratzer: '" /></value><value><simpleValue value="'ok: '" /></value></arrayValue>
              </initialValue>
            </variable>
            <variable name="aMean">
              <type>
                <derived name="TcVnVector4_LREAL" />
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="0.229" />
                  </value>
                  <value>
                    <simpleValue value="0.224" />
                  </value>
                  <value>
                    <simpleValue value="0.225" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
            <variable name="aStd">
              <type>
                <derived name="TcVnVector4_LREAL" />
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="0.485" />
                  </value>
                  <value>
                    <simpleValue value="0.456" />
                  </value>
                  <value>
                    <simpleValue value="0.406" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
            <variable name="ePaddingMode">
              <type>
                <derived name="ETcVnPaddingMode" />
              </type>
              <initialValue>
                <simpleValue value="TCVN_PM_CROP_CENTER" />
              </initialValue>
            </variable>
            <variable name="eInterpolationType">
              <type>
                <derived name="ETcVnInterpolationType" />
              </type>
              <initialValue>
                <simpleValue value="TCVN_IT_BILINEAR" />
              </initialValue>
            </variable>
            <variable name="ipImageIn">
              <type>
                <derived name="ITcVnImage" />
              </type>
              <documentation>
                <html:xhtml> Images</html:xhtml>
              </documentation>
            </variable>
            <variable name="ipImageInDisp">
              <type>
                <derived name="ITcVnDisplayableImage" />
              </type>
            </variable>
            <variable name="stPixelFormat">
              <type>
                <derived name="TcVnPixelFormat" />
              </type>
            </variable>
            <variable name="ipTensorImage">
              <type>
                <derived name="ITcVnImage" />
              </type>
            </variable>
            <variable name="ipDnnOutputImage">
              <type>
                <derived name="ITcVnImage" />
              </type>
            </variable>
            <variable name="aConfidence">
              <type>
                <derived name="TcVnVector4_LREAL" />
              </type>
              <documentation>
                <html:xhtml> Result</html:xhtml>
              </documentation>
            </variable>
            <variable name="aClassIndex">
              <type>
                <derived name="TcVnPoint2_DINT" />
              </type>
            </variable>
            <variable name="sResult">
              <type>
                <string length="255" />
              </type>
            </variable>
            <variable name="aWhite">
              <type>
                <derived name="TcVnVector4_LREAL" />
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="255" />
                  </value>
                  <value>
                    <simpleValue value="255" />
                  </value>
                  <value>
                    <simpleValue value="255" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
            <variable name="aBlack">
              <type>
                <derived name="TcVnVector4_LREAL" />
              </type>
              <initialValue>
                <arrayValue>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                  <value>
                    <simpleValue value="0" />
                  </value>
                </arrayValue>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <html:xhtml>// Disclaimer

// This publication contains statements about the suitability of our products for certain
// areas of application. These statements are based on typical features of our products.
// The examples shown in this publication are for demonstration purposes only.
// The information provided herein should not be regarded as specific operation characteristics.
// It is incumbent on the customer to check and decide whether a product is suitable for use
// in a particular application. We do not give any warranty that the source code which is
// made available with this publication is complete or accurate.

// THE SAMPLE CODE CONTAINED IN THIS PUBLICATION IS PROVIDED “AS IS” WITHOUT WARRANTY OF ANY KIND,
// EITHER EXPRESSED, IMPLIED OR STATUTORY, INCLUDING WITHOUT LIMITATION, ANY WARRANTY WITH RESPECT TO NON-INFRINGEMENT,
// FREEDOM FROM PROPRIETARY RIGHTS OF THIRD PARTIES OR FITNESS FOR ANY PARTICULAR PURPOSE.

// This publication may be changed from time to time without prior notice.
// No liability is assumed for errors and/or omissions.
// Our products are described in detail in our data sheets and documentations.
// Product-specific warnings and cautions must be observed.
// For the latest version of our data sheets and documentations visit our website (www.beckhoff.de).

// © Beckhoff Automation GmbH &amp; Co. KG, December 2023

// The reproduction, distribution and utilization of this document as well as the communication
// of its contents to others without express authorization is prohibited.
// Offenders will be held liable for the payment of damages.
// All rights reserved in the event of the grant of a patent, utility model or design.

//	==========================================================================================

// SAMPLE - Neural Network
//	-------------------------------------------------------

// Steps To Do:
// ------------
// 1. Add the images to the FileSource control
// 2. Activate the configuration -&gt; Start TwinCAT system and PLC to run
// 3. Watch the results in the ADS Image Watch

// Load Dnn model
IF NOT bDnnModelInitialized THEN
	sFilePath := CONCAT (sFolderPath,sFileName);
	FW_SafeRelease(ADR(ipDnnModel));
	fbReadDnn(sFilePath := sFilePath, ipDestNeuralNetwork := ipDnnModel, bRead := TRUE);

	IF NOT fbReadDnn.bBusy THEN
		fbReadDnn(sFilePath:='', bRead := FALSE);
		IF NOT fbReadDnn.bError THEN
			bDnnModelInitialized := TRUE;
		END_IF
		nReturnCode := fbReadDnn.nErrorId AND 16#FFF;
	END_IF
END_IF

// Get camera state
eCameraState := fbCameraControl.GetState();

// CameraControl is in error state
IF eCameraState = TCVN_CS_ERROR THEN
	hr := fbCameraControl.Reset();

// Camera not yet streaming
ELSIF eCameraState &lt; TCVN_CS_ACQUIRING THEN
	hr := fbCameraControl.StartAcquisition();

// Camera streaming
ELSIF eCameraState = TCVN_CS_ACQUIRING THEN
	hr := fbCameraControl.GetCurrentImage(ipImageIn);

	// Check if new image was received
	IF bDnnModelInitialized AND SUCCEEDED(hr) AND ipImageIn &lt;&gt; 0 THEN
		hr := F_VN_GetPixelFormat(ipImageIn, stPixelFormat, hr);

		// Check if input image channels matches the model requirements, alternative implement the needed color space transformation yourself.
		IF stPixelFormat.nChannels &lt;&gt; cModelInputChannels OR stPixelFormat.ePixelEncoding &lt;&gt; TCVN_PE_NONE THEN
			hr := Tc2_System.E_HRESULTAdsErr.INCOMPATIBLE;
		END_IF

		// *** Preprocessing steps ***
		// Adjust the dimensions of the input image to match the model input requirements
		hr := F_VN_ResizeImageExp(ipImageIn, ipTensorImage, cModelInputWidth, cModelInputHeight, eInterpolationType, ePaddingMode, aBlack, hr);

		// Convert the image to type REAL and scale to the range [0.0, 1.0]
		hr := F_VN_ConvertElementTypeExp(ipTensorImage, ipTensorImage, TCVN_ET_REAL, 1.0 / UDINT_TO_REAL(cMaxPixelValue), 0, hr);

		// Normalization
		hr := F_VN_SubtractVectorFromImage(ipTensorImage, aMean, ipTensorImage,hr);
		hr := F_VN_DivideImageByVector(ipTensorImage, aStd, ipTensorImage, hr);

		// Convert the input image to 4D Tensor
		hr := F_VN_ConvertDataLayout(ipTensorImage, ipTensorImage, TCVN_DL_4D_NCHW, hr);

		// *** Model execution ***
		hr := F_VN_ExecuteNeuralNetwork(ipDnnModel, ipTensorImage, ipDnnOutputImage, hr);

		// *** Postprocessing steps ***
		// Get best classfication result
		hr := F_VN_SoftMax(ipDnnOutputImage,ipDnnOutputImage,hr);
		hr := F_VN_MaxPixelValue(ipDnnOutputImage, aConfidence , aClassIndex, hr);

		// Result visualization
		sResult := CONCAT(sClassLabels[aClassIndex[0]] , LREAL_TO_FMTSTR(aConfidence[0], 2, FALSE));
		hr := F_VN_PutLabelExp(sResult, ipImageIn, 5, 15, 1, 1, TCVN_FT_HERSHEY_PLAIN, aBlack, aWhite, TCVN_LT_4_CONNECTED, hr);

		// Display images and release pointer
		hr := F_VN_TransformIntoDisplayableImage(ipImageIn, ipImageInDisp, S_OK);
		FW_SafeRelease(ADR(ipTensorImage));
		FW_SafeRelease(ADR(ipDnnOutputImage));
    END_IF
END_IF
</html:xhtml>
          </ST>
        </body>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>972f74f9-c431-4101-b500-8138c798d77c</ObjectId>
          </data>
        </addData>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="MAIN" ObjectId="972f74f9-c431-4101-b500-8138c798d77c" />
      </ProjectStructure>
    </data>
  </addData>
</project>