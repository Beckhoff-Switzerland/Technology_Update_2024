<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Productversion="">
  <POU Name="FB_N1_M5_Time_Scheduled" Id="aa69e527-d0ef-4c1a-9d05-10bc7829d750" SpecialFunc="None">
    <Declaration><![CDATA[//The Timespan Operation executes a mathematical operation on two or more different input timespans and provides the result of the mathematical operation. The operator can be configured individually. Optional a boolean signal for Enable Execution can be selected, so that the algorithm is just active if the value of the selected signal is TRUE.
FUNCTION_BLOCK FB_N1_M5_Time_Scheduled
VAR_INPUT
	nTimeInCh1: LINT; 
	nTimeInCh2: LINT; 
	nTimeInCh3: LINT; 
	bEnableExecution: BOOL := TRUE; 
	bReset: BOOL; 
	bReconfigure: BOOL := TRUE;
END_VAR
VAR_INPUT PERSISTENT
	eTimespanOperator: E_ALY_TimespanOperator; 
END_VAR
VAR_OUTPUT
	bError: BOOL;
	ipTcResult: I_TcMessage;
	bNewResult: BOOL;
	fbTimespanResult: FB_ALY_TimeSpan;
END_VAR
VAR
	
	R_TRIG_Reconfigure: R_TRIG;
	
	fbALY_TimespanOperation: FB_ALY_TimespanOperation(nNumChannels:=3);
END_VAR
VAR PERSISTENT
	bConfigured: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Call" Id="60067f30-4fb8-4296-bd10-9035ee0b1725">
      <Declaration><![CDATA[METHOD Call : BOOL
VAR_INPUT
	nCurrentContext: DWORD;
END_VAR
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT bConfigured THEN
	bConfigured:= TRUE;

	eTimespanOperator:= E_ALY_TimespanOperator.Addition;

END_IF

R_TRIG_Reconfigure(CLK:= bReconfigure);
IF R_TRIG_Reconfigure.Q THEN
	fbALY_TimespanOperation.Configure(eTimespanOperator:= eTimespanOperator);

	bReconfigure:= FALSE;
END_IF

IF bReset THEN
	Reset();
END_IF

IF bEnableExecution THEN
	IF F_HasContext(nCurrentContext, nContext) THEN
		fbALY_TimespanOperation.SetChannelValue(nChannel:= 1, Input:= nTimeInCh1);
		fbALY_TimespanOperation.SetChannelValue(nChannel:= 2, Input:= nTimeInCh2);
		fbALY_TimespanOperation.SetChannelValue(nChannel:= 3, Input:= nTimeInCh3);

		fbALY_TimespanOperation.Call();


		bNewResult:= fbALY_TimespanOperation.bNewResult;
		fbTimespanResult:= fbALY_TimespanOperation.fbTimespanResult;

		bError:= fbALY_TimespanOperation.bError;
		ipTcResult:= fbALY_TimespanOperation.ipResultMessage;
	END_IF
ELSE
	bNewResult:= FALSE;
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="Reset" Id="f1d9e766-274c-49d2-80b3-a85f0920f2e3">
      <Declaration><![CDATA[METHOD Reset : BOOL
VAR
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[Reset:= fbALY_TimespanOperation.Reset();

bNewResult:= fbALY_TimespanOperation.bNewResult;
fbTimespanResult:= fbALY_TimespanOperation.fbTimespanResult;

bError:= NOT Reset;
ipTcResult:= fbALY_TimespanOperation.ipResultMessage;]]></ST>
      </Implementation>
    </Method>
    <Property Name="nContext" Id="c47a4cff-97b3-47a2-8481-71a567cc5f30">
      <Declaration><![CDATA[PROPERTY nContext : DWORD]]></Declaration>
      <Get Name="Get" Id="da1344e3-a377-4f43-a121-5d5f0dfd5c28">
        <Declaration><![CDATA[VAR
END_VAR]]></Declaration>
        <Implementation>
          <ST><![CDATA[nContext:= E_VirtualInput.eContext_V1_Virtual_Input_Source;]]></ST>
        </Implementation>
      </Get>
    </Property>
  </POU>
</TcPlcObject>